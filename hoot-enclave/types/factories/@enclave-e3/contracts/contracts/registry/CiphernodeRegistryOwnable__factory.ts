/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../../../../common.js"
  import type { CiphernodeRegistryOwnable, CiphernodeRegistryOwnableInterface } from "../../../../../@enclave-e3/contracts/contracts/registry/CiphernodeRegistryOwnable.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_owner",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_enclave",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "node",
        "type": "address"
      }
    ],
    "name": "CiphernodeNotEnabled",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "CommitteeAlreadyPublished",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "CommitteeAlreadyRequested",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "CommitteeNotPublished",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidInitialization",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LeafAlreadyExists",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LeafCannotBeZero",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LeafDoesNotExist",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "LeafGreaterThanSnarkScalarField",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotInitializing",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "OnlyEnclave",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "OnlyFilter",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "OwnableInvalidOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "OwnableUnauthorizedAccount",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "WrongSiblingNodes",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "node",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "index",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "numNodes",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "size",
        "type": "uint256"
      }
    ],
    "name": "CiphernodeAdded",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "node",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "index",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "numNodes",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "size",
        "type": "uint256"
      }
    ],
    "name": "CiphernodeRemoved",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "e3Id",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "bytes",
        "name": "publicKey",
        "type": "bytes"
      }
    ],
    "name": "CommitteePublished",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "e3Id",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "filter",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint32[2]",
        "name": "threshold",
        "type": "uint32[2]"
      }
    ],
    "name": "CommitteeRequested",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "enclave",
        "type": "address"
      }
    ],
    "name": "EnclaveSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint64",
        "name": "version",
        "type": "uint64"
      }
    ],
    "name": "Initialized",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "node",
        "type": "address"
      }
    ],
    "name": "addCiphernode",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "ciphernodes",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "size",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "depth",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "e3Id",
        "type": "uint256"
      }
    ],
    "name": "committeePublicKey",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "publicKeyHash",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "enclave",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "e3Id",
        "type": "uint256"
      }
    ],
    "name": "getFilter",
    "outputs": [
      {
        "internalType": "contract IRegistryFilter",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_owner",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_enclave",
        "type": "address"
      }
    ],
    "name": "initialize",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "node",
        "type": "address"
      }
    ],
    "name": "isCiphernodeEligible",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "node",
        "type": "address"
      }
    ],
    "name": "isEnabled",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "numCiphernodes",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "e3Id",
        "type": "uint256"
      }
    ],
    "name": "publicKeyHashes",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "publicKeyHash",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "e3Id",
        "type": "uint256"
      },
      {
        "internalType": "bytes",
        "name": "",
        "type": "bytes"
      },
      {
        "internalType": "bytes",
        "name": "publicKey",
        "type": "bytes"
      }
    ],
    "name": "publishCommittee",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "e3Id",
        "type": "uint256"
      }
    ],
    "name": "registryFilters",
    "outputs": [
      {
        "internalType": "contract IRegistryFilter",
        "name": "filter",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "node",
        "type": "address"
      },
      {
        "internalType": "uint256[]",
        "name": "siblingNodes",
        "type": "uint256[]"
      }
    ],
    "name": "removeCiphernode",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "e3Id",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "filter",
        "type": "address"
      },
      {
        "internalType": "uint32[2]",
        "name": "threshold",
        "type": "uint32[2]"
      }
    ],
    "name": "requestCommittee",
    "outputs": [
      {
        "internalType": "bool",
        "name": "success",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "root",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "e3Id",
        "type": "uint256"
      }
    ],
    "name": "rootAt",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "e3Id",
        "type": "uint256"
      }
    ],
    "name": "roots",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "root",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_enclave",
        "type": "address"
      }
    ],
    "name": "setEnclave",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "treeSize",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x608060405234801561000f575f5ffd5b506040516119f53803806119f583398101604081905261002e9161031c565b610038828261003f565b505061034d565b5f5160206119d55f395f51905f52805468010000000000000000810460ff1615906001600160401b03165f811580156100755750825b90505f826001600160401b031660011480156100905750303b155b90508115801561009e575080155b156100bc5760405163f92ee8a960e01b815260040160405180910390fd5b84546001600160401b031916600117855583156100ea57845460ff60401b1916680100000000000000001785555b6100f333610175565b6100fc86610189565b5f5160206119b55f395f51905f52546001600160a01b0388811691161461012657610126876101d8565b831561016c57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b61017d610217565b61018681610254565b50565b61019161025c565b5f80546001600160a01b0319166001600160a01b038316908117825560405190917f2c8267accd82e977550ed2349c73311183cd22e306347be4453c8d130995e3c991a250565b6101e061025c565b6001600160a01b03811661020e57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b610186816102a4565b5f5160206119d55f395f51905f525468010000000000000000900460ff1661025257604051631afcd79f60e31b815260040160405180910390fd5b565b6101e0610217565b3361027b5f5160206119b55f395f51905f52546001600160a01b031690565b6001600160a01b0316146102525760405163118cdaa760e01b8152336004820152602401610205565b5f5160206119b55f395f51905f5280546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b80516001600160a01b0381168114610317575f5ffd5b919050565b5f5f6040838503121561032d575f5ffd5b61033683610301565b915061034460208401610301565b90509250929050565b61165b8061035a5f395ff3fe608060405234801561000f575f5ffd5b5060043610610179575f3560e01c8063a04e6065116100d2578063dbb06c9311610088578063f2fde38b11610063578063f2fde38b1461037a578063f379b0df1461038d578063f6fc05d5146103b0575f5ffd5b8063dbb06c931461033f578063e82f3b7014610351578063ebf0c71714610364575f5ffd5b8063ca2869a0116100b8578063ca2869a0146102e5578063d6b565d914610304578063d9bbec951461032c575f5ffd5b8063a04e6065146102b3578063c2b40ae4146102c6575f5ffd5b80638a78bb15116101325780638da5cb5b1161010d5780638da5cb5b1461025d5780639015d3711461028d5780639ccb58d5146102a0575f5ffd5b80638a78bb15146102155780638cb89ecb146102285780638d1ddfb114610255575f5ffd5b8063485cc95511610162578063485cc955146101e557806370e36bbe146101fa578063715018a61461020d575f5ffd5b80632c92fb991461017d5780632e7b716d146101c2575b5f5ffd5b6101a561018b3660046111b6565b5f908152600660205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020015b60405180910390f35b6101d56101d03660046111e3565b6103b9565b60405190151581526020016101b9565b6101f86101f33660046111fc565b6103c9565b005b6101f86102083660046111e3565b61051d565b6101f8610579565b6101f86102233660046111e3565b61058c565b6102476102363660046111b6565b60086020525f908152604090205481565b6040519081526020016101b9565b600254610247565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166101a5565b6101d561029b3660046111e3565b61062e565b6101d56102ae36600461122d565b61064d565b6101f86102c136600461126d565b6107bb565b6102476102d43660046111b6565b60076020525f908152604090205481565b6102476102f33660046111b6565b5f9081526007602052604090205490565b6101a56103123660046111b6565b60066020525f90815260409020546001600160a01b031681565b6101f861033a366004611333565b61085e565b5f546101a5906001600160a01b031681565b61024761035f3660046111b6565b6108ed565b6003545f90815260046020526040902054610247565b6101f86103883660046111e3565b61091e565b60025460035461039b919082565b604080519283526020830191909152016101b9565b61024760015481565b5f6103c38261062e565b92915050565b5f6103d2610960565b805490915060ff68010000000000000000820416159067ffffffffffffffff165f811580156103fe5750825b90505f8267ffffffffffffffff16600114801561041a5750303b155b905081158015610428575080155b156104465760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561047a57845468ff00000000000000001916680100000000000000001785555b61048333610988565b61048c8661051d565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b038881169116146104c9576104c98761091e565b831561051457845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b610525610999565b5f805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038316908117825560405190917f2c8267accd82e977550ed2349c73311183cd22e306347be4453c8d130995e3c991a250565b610581610999565b61058a5f6109f4565b565b610594610999565b806105a960026001600160a01b038316610a71565b5060018054905f6105b9836113c0565b9190505550816001600160a01b03167f3318d261fe14a5761d2d1e21555652f623d2134c430a9883c9ad6e958bb0db53610606836001600160a01b03166002610c4390919063ffffffff16565b6001546002546040805193845260208401929092529082015260600160405180910390a25050565b6001600160a01b0381165f9081526005602052604081205415156103c3565b5f80546001600160a01b031633146106785760405163e4c2a7eb60e01b815260040160405180910390fd5b5f848152600660205260409020546001600160a01b0316156106ad576040516374ff462560e11b815260040160405180910390fd5b5f848152600660205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385161790556106f76003545f9081526004602052604090205490565b5f85815260076020526040908190209190915551631590527b60e11b81526001600160a01b03841690632b20a4f6906107369087908690600401611414565b6020604051808303815f875af1158015610752573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107769190611428565b50837fa17377d4a5c0ff5c67888a6b08d9bf3a8505b47e922b6186b259471ebf12738e84846040516107a9929190611447565b60405180910390a25060019392505050565b6107c3610999565b825f6107d960026001600160a01b038416610c43565b90506107f160026001600160a01b0384168686610c95565b5060018054905f61080183611464565b90915550506001546002546040805184815260208101939093528201526001600160a01b038616907f8c008e3835f6c79bfcdb89f0f6ca8705e0b01049ee84a90b0e4da1c7ba9405d5906060015b60405180910390a25050505050565b5f858152600660205260409020546001600160a01b031633146108945760405163be19562360e01b815260040160405180910390fd5b81816040516108a4929190611479565b604080519182900382205f8881526008602052919091205585907f8d0ca30515bbff1268ae5868080463444e5002373f7bc7d8d8869dca0a5ffc019061084f9085908590611488565b5f8181526008602052604090205480610919576040516322e679e360e11b815260040160405180910390fd5b919050565b610926610999565b6001600160a01b03811661095457604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61095d816109f4565b50565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006103c3565b610990610cac565b61095d81610cd1565b336109cb7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b03161461058a5760405163118cdaa760e01b815233600482015260240161094b565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805473ffffffffffffffffffffffffffffffffffffffff1981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018210610ab2576040516361c0541760e11b815260040160405180910390fd5b815f03610ad2576040516314b48df160e11b815260040160405180910390fd5b5f82815260038401602052604090205415610b00576040516312c50cad60e11b815260040160405180910390fd5b825460018085015490610b149083906114b6565b610b1f8260026115ac565b1015610b3157610b2e816113c0565b90505b60018501819055835f5b82811015610c09578084901c600116600103610bee576040805180820182525f83815260028a0160209081529083902054825281018490529051632b0aac7f60e11b815273__$078c82ddf6c95d34ea184ef1dd6130d136$__9163561558fe91610ba891906004016115b7565b602060405180830381865af4158015610bc3573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610be791906115e7565b9150610c01565b5f81815260028801602052604090208290555b600101610b3b565b50610c13836113c0565b8087555f928352600287016020908152604080852084905596845260039097019096529390209390935550919050565b5f8181526003830160205260408120548103610c7257604051631c811d5b60e21b815260040160405180910390fd5b5f828152600384016020526040902054610c8e906001906115fe565b9392505050565b5f610ca385855f8686610cd9565b95945050505050565b610cb4611198565b61058a57604051631afcd79f60e31b815260040160405180910390fd5b610926610cac565b5f7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018410610d1a576040516361c0541760e11b815260040160405180910390fd5b5f858152600387016020526040902054610d4757604051631c811d5b60e21b815260040160405180910390fd5b5f84815260038701602052604090205415610d75576040516312c50cad60e11b815260040160405180910390fd5b5f610d808787610c43565b8754909150859087905f90610d97906001906115fe565b60018b01549091505f90815b81811015611113578087901c600116600103610f64577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018a8a85818110610dec57610dec611611565b9050602002013510610e11576040516361c0541760e11b815260040160405180910390fd5b73__$078c82ddf6c95d34ea184ef1dd6130d136$__63561558fe60405180604001604052808d8d88818110610e4857610e48611611565b905060200201358152602001898152506040518263ffffffff1660e01b8152600401610e7491906115b7565b602060405180830381865af4158015610e8f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eb391906115e7565b955073__$078c82ddf6c95d34ea184ef1dd6130d136$__63561558fe60405180604001604052808d8d88818110610eec57610eec611611565b905060200201358152602001888152506040518263ffffffff1660e01b8152600401610f1891906115b7565b602060405180830381865af4158015610f33573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f5791906115e7565b945082600101925061110b565b86811c84821c146110f8577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018a8a85818110610fa257610fa2611611565b9050602002013510610fc7576040516361c0541760e11b815260040160405180910390fd5b5f81815260028e016020526040902054859003610ff1575f81815260028e01602052604090208690555b73__$078c82ddf6c95d34ea184ef1dd6130d136$__63561558fe60405180604001604052808981526020018d8d8881811061102e5761102e611611565b905060200201358152506040518263ffffffff1660e01b815260040161105491906115b7565b602060405180830381865af415801561106f573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061109391906115e7565b955073__$078c82ddf6c95d34ea184ef1dd6130d136$__63561558fe60405180604001604052808881526020018d8d888181106110d2576110d2611611565b905060200201358152506040518263ffffffff1660e01b8152600401610f1891906115b7565b5f81815260028e01602052604090208690555b600101610da3565b5060018c01545f90815260028d016020526040902054841461114857604051631fd4986360e11b815260040160405180910390fd5b5f81815260028d01602052604090208590558915611178575f8b815260038d016020526040808220548c83529120555b5050505f88815260038a0160205260408120555091505095945050505050565b5f6111a1610960565b5468010000000000000000900460ff16919050565b5f602082840312156111c6575f5ffd5b5035919050565b80356001600160a01b0381168114610919575f5ffd5b5f602082840312156111f3575f5ffd5b610c8e826111cd565b5f5f6040838503121561120d575f5ffd5b611216836111cd565b9150611224602084016111cd565b90509250929050565b5f5f5f6080848603121561123f575f5ffd5b8335925061124f602085016111cd565b915084608085011115611260575f5ffd5b6040840190509250925092565b5f5f5f6040848603121561127f575f5ffd5b611288846111cd565b9250602084013567ffffffffffffffff8111156112a3575f5ffd5b8401601f810186136112b3575f5ffd5b803567ffffffffffffffff8111156112c9575f5ffd5b8660208260051b84010111156112dd575f5ffd5b939660209190910195509293505050565b5f5f83601f8401126112fe575f5ffd5b50813567ffffffffffffffff811115611315575f5ffd5b60208301915083602082850101111561132c575f5ffd5b9250929050565b5f5f5f5f5f60608688031215611347575f5ffd5b85359450602086013567ffffffffffffffff811115611364575f5ffd5b611370888289016112ee565b909550935050604086013567ffffffffffffffff81111561138f575f5ffd5b61139b888289016112ee565b969995985093965092949392505050565b634e487b7160e01b5f52601160045260245ffd5b5f600182016113d1576113d16113ac565b5060010190565b805f5b600281101561140e57813563ffffffff81168082146113f8575f5ffd5b85525060209384019391909101906001016113db565b50505050565b82815260608101610c8e60208301846113d8565b5f60208284031215611438575f5ffd5b81518015158114610c8e575f5ffd5b6001600160a01b038316815260608101610c8e60208301846113d8565b5f81611472576114726113ac565b505f190190565b818382375f9101908152919050565b60208152816020820152818360408301375f818301604090810191909152601f909201601f19160101919050565b808201808211156103c3576103c36113ac565b6001815b6001841115611504578085048111156114e8576114e86113ac565b60018416156114f657908102905b60019390931c9280026114cd565b935093915050565b5f8261151a575060016103c3565b8161152657505f6103c3565b816001811461153c576002811461154657611562565b60019150506103c3565b60ff841115611557576115576113ac565b50506001821b6103c3565b5060208310610133831016604e8410600b8410161715611585575081810a6103c3565b6115915f1984846114c9565b805f19048211156115a4576115a46113ac565b029392505050565b5f610c8e838361150c565b6040810181835f5b60028110156115de5781518352602092830192909101906001016115bf565b50505092915050565b5f602082840312156115f7575f5ffd5b5051919050565b818103818111156103c3576103c36113ac565b634e487b7160e01b5f52603260045260245ffdfea2646970667358221220af034e57b7dafc9a98fcb31e3dd6fa06fa2fc6626e7c48b4cdaa675aa6cf343064736f6c634300081b00339016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00";

  
      type CiphernodeRegistryOwnableConstructorParams =
        | [linkLibraryAddresses: CiphernodeRegistryOwnableLibraryAddresses, signer?: Signer]
        | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (
        xs: CiphernodeRegistryOwnableConstructorParams
      ): xs is ConstructorParameters<typeof ContractFactory> => {
        return typeof xs[0] === 'string'
          || (Array.isArray as (arg: any) => arg is readonly any[])(xs[0])
          || '_isInterface' in xs[0]
      }

  export class CiphernodeRegistryOwnable__factory extends ContractFactory {
    
    constructor(
      ...args: CiphernodeRegistryOwnableConstructorParams
    ) {
      if (isSuperArgs(args)) {
        super (...args)
      } else {
        const [linkLibraryAddresses, signer] = args;
        super(
          _abi,
          CiphernodeRegistryOwnable__factory.linkBytecode(linkLibraryAddresses),
          signer
        )
      }
      
    }

    static linkBytecode(linkLibraryAddresses: CiphernodeRegistryOwnableLibraryAddresses): string {
      let linkedBytecode = _bytecode;
      
      linkedBytecode = linkedBytecode.replace(
        new RegExp("__\\$078c82ddf6c95d34ea184ef1dd6130d136\\$__", "g"),
        linkLibraryAddresses["npm/poseidon-solidity@0.0.5/PoseidonT3.sol:PoseidonT3"].replace(/^0x/, '').toLowerCase(),
      );

      return linkedBytecode;
    }
  
    override getDeployTransaction(_owner: AddressLike, _enclave: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(_owner, _enclave, overrides || {});
    };
    override deploy(_owner: AddressLike, _enclave: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(_owner, _enclave, overrides || {}) as Promise<CiphernodeRegistryOwnable & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): CiphernodeRegistryOwnable__factory {
      return super.connect(runner) as CiphernodeRegistryOwnable__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): CiphernodeRegistryOwnableInterface {
      return new Interface(_abi) as CiphernodeRegistryOwnableInterface;
    }
    
    override attach(address: string | Addressable): CiphernodeRegistryOwnable {
      return super.attach(address) as CiphernodeRegistryOwnable;
    }
  static connect(address: string, runner?: ContractRunner | null): CiphernodeRegistryOwnable {
      return new Contract(address, _abi, runner) as unknown as CiphernodeRegistryOwnable;
    }
  }

  
  export interface CiphernodeRegistryOwnableLibraryAddresses {
        ["npm/poseidon-solidity@0.0.5/PoseidonT3.sol:PoseidonT3"]: string;
  };
  